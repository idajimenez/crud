{"ast":null,"code":"var _jsxFileName = \"/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/components/User.js\";\nimport PropTypes from 'prop-types';\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Button from './Button';\nimport makeApiRequest from '../makeApiReqest';\nUser.propTypes = {\n  user: PropTypes.object.isRequired,\n  isEdit: PropTypes.bool,\n  handleUpdateList: PropTypes.func.isRequired,\n  toggleForm: PropTypes.func.isRequired,\n  isNewUser: PropTypes.bool\n};\n\nfunction User({\n  user,\n  isEdit = false,\n  handleUpdateList,\n  toggleForm,\n  isNewUser = false\n}) {\n  const inputEmail = useRef(null);\n  const inputFirstName = useRef(null);\n  const inputLastName = useRef(null);\n  const [userData, setUserData] = useState(user);\n  const [isSaving, setToggleSave] = useState(false);\n  useEffect(() => {\n    setUserData(user);\n  }, [user]);\n\n  const handleSave = () => {\n    try {\n      setToggleSave(true);\n      let newValue = {\n        email: inputEmail.current.value,\n        first_name: inputFirstName.current.value,\n        last_name: inputLastName.current.value\n      };\n      makeApiRequest(`/users/${user.id}`, isNewUser ? 'POST' : 'PUT', isNewUser ? newValue : null).then(resp => {\n        handleUpdateList(isNewUser ? 'add' : 'update', { ...user,\n          ...newValue,\n          ...resp\n        }, user.id);\n        setToggleSave(false);\n      });\n    } catch (err) {\n      // show error\n      setToggleSave(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"user__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user.avatar,\n    className: \"user__avatar\",\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"user__item-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, !isEdit ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, user.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, user.first_name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, user.last_name)) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"user__data\",\n    defaultValue: userData.email,\n    ref: inputEmail,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"user__data\",\n    defaultValue: userData.first_name,\n    ref: inputFirstName,\n    placeholder: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"user__data\",\n    defaultValue: userData.last_name,\n    ref: inputLastName,\n    placeholder: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), isEdit && React.createElement(\"div\", {\n    className: \"user__actions active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: \"Cancel\",\n    onClick: toggleForm,\n    isProcessing: isSaving,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Button, {\n    label: isSaving ? 'Saving' : 'Save',\n    color: \"green\",\n    onClick: handleSave,\n    isProcessing: isSaving,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/components/User.js"],"names":["PropTypes","React","Fragment","useState","useEffect","useRef","Button","makeApiRequest","User","propTypes","user","object","isRequired","isEdit","bool","handleUpdateList","func","toggleForm","isNewUser","inputEmail","inputFirstName","inputLastName","userData","setUserData","isSaving","setToggleSave","handleSave","newValue","email","current","value","first_name","last_name","id","then","resp","err","avatar"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Button from './Button';\nimport makeApiRequest from '../makeApiReqest';\n\nUser.propTypes = {\n    user: PropTypes.object.isRequired,\n    isEdit: PropTypes.bool,\n    handleUpdateList: PropTypes.func.isRequired,\n    toggleForm: PropTypes.func.isRequired,\n    isNewUser: PropTypes.bool\n}\n\nfunction User({ user, isEdit = false, handleUpdateList, toggleForm, isNewUser = false }) {\n    const inputEmail = useRef(null);\n    const inputFirstName = useRef(null);\n    const inputLastName = useRef(null);\n\n    const [userData, setUserData] = useState(user);\n    const [isSaving, setToggleSave] = useState(false);\n    \n    useEffect(() => {\n        setUserData(user);\n    }, [user]);\n\n    const handleSave = () => {\n        try {\n            setToggleSave(true);\n\n            let newValue = {\n                email: inputEmail.current.value,\n                first_name: inputFirstName.current.value,\n                last_name: inputLastName.current.value,\n            };\n\n            makeApiRequest(`/users/${user.id}`, isNewUser ? 'POST' : 'PUT', isNewUser ? newValue : null).then(resp => {\n                handleUpdateList(isNewUser ? 'add' : 'update', {\n                    ...user,\n                    ...newValue,\n                    ...resp\n                }, user.id);\n\n                setToggleSave(false);\n            });\n        }\n        catch(err) {\n            // show error\n            setToggleSave(false);\n        }\n    }\n\n    return (\n        <div className='user__item'>\n            <img src={user.avatar} className='user__avatar' alt='avatar'/>\n            <div className='user__item-content'>\n                {!isEdit\n                    ? <Fragment>\n                        <p>{user.email}</p>\n                        <p>{user.first_name}</p>\n                        <p>{user.last_name}</p>\n                    </Fragment>\n                    : <Fragment>\n                        <input\n                            className='user__data'\n                            defaultValue={userData.email}\n                            ref={inputEmail}\n                            placeholder='Email'/>\n                        <input\n                            className='user__data'\n                            defaultValue={userData.first_name}\n                            ref={inputFirstName}\n                            placeholder='First Name'/>\n                        <input\n                            className='user__data'\n                            defaultValue={userData.last_name}\n                            ref={inputLastName}\n                            placeholder='Last Name'/>\n                    </Fragment>\n                }\n            </div>\n            {isEdit && (\n                <div className='user__actions active'>\n                    <Button\n                        label='Cancel'\n                        onClick={toggleForm}\n                        isProcessing={isSaving} />\n                    <Button\n                        label={isSaving ? 'Saving' : 'Save'}\n                        color='green'\n                        onClick={handleSave}\n                        isProcessing={isSaving} />\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}