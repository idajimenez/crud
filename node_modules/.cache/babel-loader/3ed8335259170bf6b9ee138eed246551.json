{"ast":null,"code":"var _jsxFileName = \"/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/App.js\";\nimport React, { useState, Fragment } from 'react';\nimport Button from './components/Button';\nimport UserList from './components/UserList';\nimport User from './components/User';\nimport './App.css';\n\nfunction App() {\n  const [isFormVisible, setFormVisible] = useState(false);\n  const [currentUser, setUser] = useState({});\n  const [newUser, setNewUser] = useState(null);\n\n  const toggleForm = (user = {}) => {\n    setUser(user);\n\n    if (isFormVisible) {\n      setFormVisible(false);\n    }\n  };\n\n  const toggleNewUser = async () => {\n    setFormVisible(true);\n    setUser({\n      id: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n      avatar: 'https://via.placeholder.com/70x70'\n    });\n  };\n\n  const handleNewUser = (action, data) => {\n    setNewUser(data);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"user__list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, isFormVisible ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(User, {\n    user: currentUser,\n    isEdit: isFormVisible,\n    isNewUser: true,\n    toggleForm: toggleForm,\n    handleUpdateList: handleNewUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    label: \"Add\",\n    color: \"green\",\n    onClick: toggleNewUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(UserList, {\n    toggleForm: toggleForm,\n    currentUserId: currentUser.id || null,\n    setNewUser: setNewUser,\n    newUser: newUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/App.js"],"names":["React","useState","Fragment","Button","UserList","User","App","isFormVisible","setFormVisible","currentUser","setUser","newUser","setNewUser","toggleForm","user","toggleNewUser","id","email","first_name","last_name","avatar","handleNewUser","action","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,aAAD,EAAgBC,cAAhB,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,WAAD,EAAcC,OAAd,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMY,UAAU,GAAG,CAACC,IAAI,GAAG,EAAR,KAAe;AAC9BJ,IAAAA,OAAO,CAACI,IAAD,CAAP;;AAEA,QAAIP,aAAJ,EAAmB;AACfC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH;AACJ,GAND;;AAQA,QAAMO,aAAa,GAAG,YAAY;AAC9BP,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEAE,IAAAA,OAAO,CAAC;AACJM,MAAAA,EAAE,EAAE,EADA;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,UAAU,EAAE,EAHR;AAIJC,MAAAA,SAAS,EAAE,EAJP;AAKJC,MAAAA,MAAM,EAAE;AALJ,KAAD,CAAP;AAOH,GAVD;;AAYA,QAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACpCX,IAAAA,UAAU,CAACW,IAAD,CAAV;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,aAAa,GACR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEE,WADV;AAEI,IAAA,MAAM,EAAEF,aAFZ;AAGI,IAAA,SAAS,EAAE,IAHf;AAII,IAAA,UAAU,EAAEM,UAJhB;AAKI,IAAA,gBAAgB,EAAEQ,aALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GASR,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,KAAK,EAAC,OAA1B;AAAkC,IAAA,OAAO,EAAEN,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVV,CADJ,EAcI,oBAAC,QAAD;AACI,IAAA,UAAU,EAAEF,UADhB;AAEI,IAAA,aAAa,EAAEJ,WAAW,CAACO,EAAZ,IAAkB,IAFrC;AAGI,IAAA,UAAU,EAAEJ,UAHhB;AAII,IAAA,OAAO,EAAED,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADJ;AAsBH;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport Button from './components/Button';\nimport UserList from './components/UserList';\nimport User from './components/User';\nimport './App.css';\n\nfunction App() {\n    const [isFormVisible, setFormVisible] = useState(false);\n    const [currentUser, setUser] = useState({});\n    const [newUser, setNewUser] = useState(null);\n\n    const toggleForm = (user = {}) => {\n        setUser(user);\n\n        if (isFormVisible) {\n            setFormVisible(false);\n        }\n    };\n\n    const toggleNewUser = async () => {\n        setFormVisible(true);\n\n        setUser({\n            id: '',\n            email: '',\n            first_name: '',\n            last_name: '',\n            avatar: 'https://via.placeholder.com/70x70'\n        })\n    }\n\n    const handleNewUser = (action, data) => {\n        setNewUser(data);\n    }\n\n    return (\n        <div className=\"App\">\n            <div className='user__list-item'>\n                {isFormVisible\n                    ? <Fragment>\n                        <User\n                            user={currentUser}\n                            isEdit={isFormVisible}\n                            isNewUser={true}\n                            toggleForm={toggleForm}\n                            handleUpdateList={handleNewUser}/>\n                    </Fragment>\n                    : <Button label='Add' color='green' onClick={toggleNewUser}/>\n                }\n            </div>\n            <UserList\n                toggleForm={toggleForm}\n                currentUserId={currentUser.id || null}\n                setNewUser={setNewUser}\n                newUser={newUser}/>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}