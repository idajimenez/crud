{"ast":null,"code":"var _jsxFileName = \"/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/components/User.js\";\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Button from './Button';\nimport makeApiRequest from '../makeApiReqest';\n\nfunction User({\n  user,\n  isEdit = false,\n  handleUpdateList,\n  toggleForm\n}) {\n  const inputEmail = useRef(null);\n  const inputFirstName = useRef(null);\n  const inputLastName = useRef(null);\n  const [userData, setUserData] = useState(user);\n  const [isSaving, setToggleSave] = useState(false);\n  useEffect(() => {\n    setUserData(user);\n  }, [user]);\n\n  const handleSave = () => {\n    try {\n      setToggleSave(true);\n      const newValue = {\n        email: inputEmail.current.value,\n        first_name: inputFirstName.current.value,\n        last_name: inputLastName.current.value\n      };\n      makeApiRequest(`/users/${user.id}`, 'PUT').then(resp => {\n        if (resp.updatedAt) {\n          handleUpdateList(user.id, 'update', { ...user,\n            ...newValue\n          });\n        }\n\n        setToggleSave(false);\n      });\n    } catch (err) {\n      // show error\n      setToggleSave(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"user__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user.avatar,\n    className: \"user__avatar\",\n    alt: \"avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"user__item-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, !isEdit ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, user.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, user.first_name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, user.last_name)) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"user__data\",\n    defaultValue: userData.email,\n    ref: inputEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"user__data\",\n    defaultValue: userData.first_name,\n    ref: inputFirstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"user__data\",\n    defaultValue: userData.last_name,\n    ref: inputLastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), isEdit && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: \"Cancel\",\n    onClick: toggleForm,\n    isProcessing: isSaving,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Button, {\n    label: isSaving ? 'Saving' : 'Save',\n    color: \"green\",\n    onClick: handleSave,\n    isProcessing: isSaving,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/components/User.js"],"names":["React","Fragment","useState","useEffect","useRef","Button","makeApiRequest","User","user","isEdit","handleUpdateList","toggleForm","inputEmail","inputFirstName","inputLastName","userData","setUserData","isSaving","setToggleSave","handleSave","newValue","email","current","value","first_name","last_name","id","then","resp","updatedAt","err","avatar"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport Button from './Button';\nimport makeApiRequest from '../makeApiReqest';\n\nfunction User({ user, isEdit = false, handleUpdateList, toggleForm }) {\n    const inputEmail = useRef(null);\n    const inputFirstName = useRef(null);\n    const inputLastName = useRef(null);\n\n    const [userData, setUserData] = useState(user);\n    const [isSaving, setToggleSave] = useState(false);\n    \n    useEffect(() => {\n        setUserData(user);\n    }, [user]);\n\n    const handleSave = () => {\n        try {\n            setToggleSave(true);\n\n            const newValue = {\n                email: inputEmail.current.value,\n                first_name: inputFirstName.current.value,\n                last_name: inputLastName.current.value\n            };\n\n            makeApiRequest(`/users/${user.id}`, 'PUT', ).then(resp => {\n                if (resp.updatedAt) {\n                    handleUpdateList(user.id, 'update', {\n                        ...user,\n                        ...newValue\n                    });\n                }\n\n                setToggleSave(false);\n            });\n        }\n        catch(err) {\n            // show error\n            setToggleSave(false);\n        }\n    }\n\n    return (\n        <div className='user__item'>\n            <img src={user.avatar} className='user__avatar' alt='avatar'/>\n            <div className='user__item-content'>\n                {!isEdit\n                    ? <Fragment>\n                        <p>{user.email}</p>\n                        <p>{user.first_name}</p>\n                        <p>{user.last_name}</p>\n                    </Fragment>\n                    : <Fragment>\n                        <input className='user__data' defaultValue={userData.email} ref={inputEmail}/>\n                        <input className='user__data' defaultValue={userData.first_name} ref={inputFirstName}/>\n                        <input className='user__data' defaultValue={userData.last_name} ref={inputLastName}/>\n                    </Fragment>\n                }\n            </div>\n            {isEdit && (\n                <div>\n                    <Button\n                        label='Cancel'\n                        onClick={toggleForm}\n                        isProcessing={isSaving} />\n                    <Button\n                        label={isSaving ? 'Saving' : 'Save'}\n                        color='green'\n                        onClick={handleSave}\n                        isProcessing={isSaving} />\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}