{"ast":null,"code":"/**\n * Method for making ajax calls to the site's api\n * @param {String} endpoint - the endpoint url\n * @param {String} method = GET | PUT | POST | DELETE\n * @param {Object} data\n * @returns {Promise}\n */\nexport default async function makeApiRequest(endpoint, method, data) {\n  let url = `https://reqres.in/api${endpoint}`;\n  const response = await fetch(url, {\n    method,\n    body: data ? JSON.stringify(data) : null\n  });\n  console.log(method, data);\n\n  if (response.ok) {\n    if (response.status === 204) {\n      return true;\n    }\n\n    return await response.json();\n  } else {\n    let error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n  }\n}","map":{"version":3,"sources":["/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/makeApiReqest.js"],"names":["makeApiRequest","endpoint","method","data","url","response","fetch","body","JSON","stringify","console","log","ok","status","json","error","Error","statusText"],"mappings":"AAAA;;;;;;;AAOA,eAAe,eAAeA,cAAf,CAA8BC,QAA9B,EAAwCC,MAAxC,EAAgDC,IAAhD,EAAsD;AACjE,MAAIC,GAAG,GAAI,wBAAuBH,QAAS,EAA3C;AACA,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC9BF,IAAAA,MAD8B;AAE9BK,IAAAA,IAAI,EAAEJ,IAAI,GAAGK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAH,GAA0B;AAFN,GAAN,CAA5B;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ,EAAoBC,IAApB;;AAEA,MAAIE,QAAQ,CAACO,EAAb,EAAiB;AACb,QAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAO,IAAP;AACH;;AAED,WAAO,MAAMR,QAAQ,CAACS,IAAT,EAAb;AACH,GAND,MAOK;AACD,QAAIC,KAAK,GAAG,IAAIC,KAAJ,CAAUX,QAAQ,CAACY,UAAnB,CAAZ;AAEAF,IAAAA,KAAK,CAACV,QAAN,GAAiBA,QAAjB;AACA,UAAMU,KAAN;AACH;AACJ","sourcesContent":["/**\n * Method for making ajax calls to the site's api\n * @param {String} endpoint - the endpoint url\n * @param {String} method = GET | PUT | POST | DELETE\n * @param {Object} data\n * @returns {Promise}\n */\nexport default async function makeApiRequest(endpoint, method, data) {\n    let url = `https://reqres.in/api${endpoint}`;\n    const response = await fetch(url, {\n        method,\n        body: data ? JSON.stringify(data) : null\n    });\n    console.log(method, data)\n\n    if (response.ok) {\n        if (response.status === 204) {\n            return true;\n        }\n        \n        return await response.json();\n    }\n    else {\n        let error = new Error(response.statusText);\n\n        error.response = response;\n        throw error;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}