{"ast":null,"code":"var _jsxFileName = \"/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/components/UserList.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport User from './User';\nimport Button from './Button';\nimport makeApiRequest from '../makeApiReqest';\n\nfunction UserList({\n  toggleEdit,\n  currentUserId\n}) {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (!users.length) {\n      try {\n        makeApiRequest('/users?page=2').then(resp => {\n          console.log(resp.data);\n          setUsers(resp.data);\n        });\n      } catch (err) {// show error\n      }\n    }\n  }, [users]);\n  /**\n   * \n   * @param {String} id\n   * @param {Object} data (User)\n   * @param {String} action (add | update | delete)\n   */\n\n  const handleUpdateList = (id, data, action) => {\n    console.log(data);\n    let currentUsers = users;\n\n    if (action === 'add') {\n      currentUsers.unshift(data);\n    } else {\n      const index = currentUsers.findIndex(user => id === user.id);\n\n      if (action === 'update') {\n        currentUsers.splice(index, 1);\n        console.log(currentUsers);\n      }\n    }\n\n    setUsers(currentUsers);\n    toggleEdit();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"user__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, users.map((user, i) => React.createElement(\"div\", {\n    className: `user__list-item ${i % 2 === 0 ? 'highlight' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(User, {\n    user: user,\n    isEdit: currentUserId === user.id,\n    handleUpdateList: handleUpdateList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: `user__actions ${currentUserId === user.id ? 'active' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, currentUserId !== user.id && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Button, {\n    label: \"Edit\",\n    color: \"blue\",\n    onClick: () => toggleEdit(user),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Button, {\n    label: \"Delete\",\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))));\n}\n\nexport default UserList;","map":{"version":3,"sources":["/Users/idaaureajimenez/Documents/Exercises/crud-activity/src/components/UserList.js"],"names":["React","Fragment","useEffect","useState","User","Button","makeApiRequest","UserList","toggleEdit","currentUserId","users","setUsers","length","then","resp","console","log","data","err","handleUpdateList","id","action","currentUsers","unshift","index","findIndex","user","splice","map","i"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport User from './User';\nimport Button from './Button';\nimport makeApiRequest from '../makeApiReqest';\n\nfunction UserList({ toggleEdit, currentUserId }) {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        if (!users.length) {\n            try {\n                makeApiRequest('/users?page=2').then(resp => {\n                    console.log(resp.data);\n                    setUsers(resp.data);\n                });\n            }\n            catch(err) {\n                // show error\n            }\n        }\n    }, [users]);\n\n    /**\n     * \n     * @param {String} id\n     * @param {Object} data (User)\n     * @param {String} action (add | update | delete)\n     */\n    const handleUpdateList = (id, data, action) => {\n        console.log(data)\n        let currentUsers = users;\n\n        if (action === 'add') {\n            currentUsers.unshift(data);\n        }\n        else {\n            const index = currentUsers.findIndex(user => id === user.id);\n\n            if (action === 'update') {\n                currentUsers.splice(index, 1);\n                console.log(currentUsers)\n            }\n        }\n\n        setUsers(currentUsers);\n        toggleEdit();\n    }\n\n    return (\n        <div className='user__list'>\n            {users.map((user, i) => (\n                <div className={`user__list-item ${i % 2 === 0 ? 'highlight' : ''}`}>\n                    <User user={user} isEdit={currentUserId === user.id} handleUpdateList={handleUpdateList}/>\n                    <div className={`user__actions ${currentUserId === user.id ? 'active' : ''}`}>\n                        {currentUserId !== user.id && (\n                            <Fragment>\n                                <Button label='Edit' color='blue' onClick={() => toggleEdit(user)} />\n                                <Button label='Delete' color='red' />\n                            </Fragment>\n                        )}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}